service: () -> {
    accrueLeave: (text) -> (variant {Ok:variant {Success:text}; Err:variant {Error:text; NotFound:text}});
    approveLeaveRequest: (text) -> (variant {Ok:variant {Success:text}; Err:variant {Error:text; NotFound:text}});
    cancelLeaveRequest: (text) -> (variant {Ok:variant {Success:text}; Err:variant {Error:text; NotFound:text}});
    createEmployee: (record {name:text; email:text; phone_number:text}) -> (variant {Ok:record {id:text; leave_balances:record {Sick:nat64; Maternity:nat64; Annual:nat64; Unpaid:nat64; Paternity:nat64}; name:text; created_at:nat64; email:text; phone_number:text}; Err:variant {Error:text; InvalidPayload:text}});
    createLeaveRequest: (record {leave_type_id:text; end_date:nat64; start_date:nat64; employee_id:text; reason:text}) -> (variant {Ok:record {id:text; status:text; leave_type_id:text; end_date:nat64; created_at:nat64; start_date:nat64; employee_id:text; reason:text}; Err:variant {Error:text; InvalidPayload:text; NotFound:text}});
    createLeaveType: (record {name:variant {Sick; Maternity; Annual; Unpaid; Paternity}; quota:nat64; carryover_allowed:bool}) -> (variant {Ok:record {id:text; name:variant {Sick; Maternity; Annual; Unpaid; Paternity}; quota:nat64; created_at:nat64; carryover_allowed:bool}; Err:variant {Error:text; InvalidPayload:text}});
    deleteEmployee: (text) -> (variant {Ok:variant {Success:text}; Err:variant {Error:text; NotFound:text}});
    generateLeaveReport: (text) -> (variant {Ok:text; Err:variant {NotFound:text}}) query;
    getEmployeeLeaveRequests: (text) -> (variant {Ok:vec record {id:text; status:text; leave_type_id:text; end_date:nat64; created_at:nat64; start_date:nat64; employee_id:text; reason:text}; Err:variant {NotFound:text}}) query;
    getEmployees: () -> (variant {Ok:vec record {id:text; leave_balances:record {Sick:nat64; Maternity:nat64; Annual:nat64; Unpaid:nat64; Paternity:nat64}; name:text; created_at:nat64; email:text; phone_number:text}; Err:variant {NotFound:text}}) query;
    getLeaveRequests: () -> (variant {Ok:vec record {id:text; status:text; leave_type_id:text; end_date:nat64; created_at:nat64; start_date:nat64; employee_id:text; reason:text}; Err:variant {NotFound:text}}) query;
    getLeaveTypes: () -> (variant {Ok:vec record {id:text; name:variant {Sick; Maternity; Annual; Unpaid; Paternity}; quota:nat64; created_at:nat64; carryover_allowed:bool}; Err:variant {NotFound:text}}) query;
}
